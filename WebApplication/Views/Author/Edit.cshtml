@model WebApplication.Models.AuthorModels.AuthorEditModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Author", FormMethod.Post, new {@enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @{
                    string value = Model.BirthDate?.ToString("yyyy-MM-dd") ?? "";
                }
                <input class="form-control text-box single-line" data-val="true" data-val-date="The field birth date must be a date." id="BirthDate" name="BirthDate" type="date" value="@value"/>
                @Html.ValidationMessageFor(model => model.BirthDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeathDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @{
                    value = Model.DeathDate?.ToString("yyyy-MM-dd") ?? "";
                }
                <input class="form-control text-box single-line" data-val="true" data-val-date="The field death date must be a date." id="DeathDate" name="DeathDate" type="date" value="@value"/>
                @Html.ValidationMessageFor(model => model.DeathDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPhoto, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-4">
                <input type="file" id="cover" name="Photo" class="file" data-allowed-file-extensions='["jpg", "jpeg", "png", "bmp"]' accept="image/*" />
                @Html.ValidationMessageFor(model => model.NewPhoto, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.TextAreaFor(model => model.Biography, 10, 50, new { htmlAttributes = new { @class = "form-control", @placeholder = "Biography..." } })
                @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/editor")

    <script>
        var btnCust = '<button type="button" class="btn btn-default" title="Add picture tags" onclick="alert(\'Call your custom code here.\')"><i class="glyphicon glyphicon-tag"></i></button>';
        $("#cover").fileinput({
            overwriteInitial: true,
            maxFileSize: 1500,
            showClose: false,
            showCaption: false,
            browseLabel: '',
            removeLabel: '',
            browseIcon: '<i class="glyphicon glyphicon-folder-open"></i>',
            removeIcon: '<i class="glyphicon glyphicon-remove"></i>',
            removeTitle: 'Cancel or reset changes',
            elErrorContainer: '#kv-avatar-errors-1',
            msgErrorClass: 'alert alert-block alert-danger',
            defaultPreviewContent: '<img src="@Url.Action("GetImage", "Author", new {id = Model.ID})" alt="Your Avatar" style="width:160px">',
            layoutTemplates: { main2: '{preview} ' + btnCust + ' {remove} {browse}' },
            allowedFileExtensions: ["jpg", "png", "gif", "jpeg"]
        });
    </script>
}




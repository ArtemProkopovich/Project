@using System.Web.Mvc.Html
@using System.Web.Mvc
@model WebApplication.Models.BookModels.BookCreateModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "Books", FormMethod.Post, new {@enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">         
            @Html.LabelFor(model => model.Authors, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-4">
                <select name="Authors" id="selector" class="selectpicker" multiple data-live-search="true">
                    <option value="">None</option>
                    @foreach (var author in Model.AuthorList)
                    {
                        <option value="@author.ID">@author.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PublishDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgeCategory, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AgeCategory, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AgeCategory, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2 class="panel-title">
                            <a class="control-label" data-toggle="collapse" data-parent="#accordion" href="#genres">
                                Genres
                            </a>
                        </h2>
                    </div>
                    <div id="genres" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="btn-group" data-toggle="buttons">
                                @foreach (var genre in Model.GenreList)
                                {
                                    <label class="btn btn-primary">
                                        <input type="checkbox" autocomplete="off" name="genres" value="@genre.ID"/> @genre.Name
                                    </label>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2 class="panel-title">
                            <a class="control-label" data-toggle="collapse" data-parent="#accordion" href="#tags">
                                Tags
                            </a>
                        </h2>
                    </div>
                    <div id="tags" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="btn-group" data-toggle="buttons">
                                @foreach (var tag in Model.TagList)
                                {
                                    <label class="btn btn-primary">
                                        <input type="checkbox" autocomplete="off" name="tags" value="@tag.ID" />@tag.Name
                                    </label>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Covers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <input id="input-c" name="Covers" type="file" multiple class="file" data-allowed-file-extensions='["jpg", "png"]'>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Files, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-6">
                <input id="input-f" name="Files" type="file" multiple class="file" data-allowed-file-extensions='["pdf", "docx", "txt", "rtf", "fb2"]'>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, 10, 70, new {htmlAttributes = new {@class = "form-control", @placeholder = "Summary..."}})
                @Html.ValidationMessageFor(model => model.Content, "", new {@class = "text-danger"})
            </div>
        </div>

        


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create book" class="btn btn-default"/>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/editor")
}

@model WebApplication.Models.ViewModels.BookModels.BookEditModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <select name="Authors" id="selector" class="selectpicker" multiple data-live-search="true">
                    @{ string selected = "";}
                    @if (Model.Authors.Count() == 0)
                    {
                        selected = "selected";
                    }
                    <option @selected value="">None</option>
                    @foreach (var author in Model.AuthorList)
                    {
                        selected = "selected";
                        if (Model.Authors.Any(e => e == author.ID))
                        {
                            selected = "";
                        }
                        <option @selected value="@author.ID">@author.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgeCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AgeCategory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AgeCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2 class="panel-title">
                            <a class="control-label" data-toggle="collapse" data-parent="#accordion" href="#genres">
                                Genres
                            </a>
                        </h2>
                    </div>
                    <div id="genres" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="btn-group" data-toggle="buttons">
                                @{ string check; }
                                @{ string active; }
                                @foreach (var genre in Model.GenreList)
                                {
                                    check = "";
                                    active = "";
                                    if (Model.Genres.Any(e => e == genre.ID))
                                    {
                                        check = "checked";
                                        active = "active";
                                    }
                                    <label class="btn btn-primary @active">
                                        <input type="checkbox" autocomplete="off" name="Genres" value="@genre.ID" @check/> @genre.Name
                                    </label>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h2 class="panel-title">
                            <a class="control-label" data-toggle="collapse" data-parent="#accordion" href="#tags">
                                Tags
                            </a>
                        </h2>
                    </div>
                    <div id="tags" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="btn-group" data-toggle="buttons">
                                @foreach (var tag in Model.TagList)
                                {
                                    check = "";
                                    active = "";
                                    if (Model.Tags.Any(e => e == tag.ID))
                                    {
                                        check = "checked";
                                        active = "active";
                                    }
                                    <label class="btn btn-primary @active">
                                        <input type="checkbox" autocomplete="off" name="Tags" value="@tag.ID" @check/>@tag.Name
                                    </label>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/editor")
}

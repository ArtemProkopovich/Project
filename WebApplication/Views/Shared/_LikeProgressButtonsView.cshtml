@model WebApplication.Models.ViewModels.ContentModels.LikeButtonsModel

@using (Ajax.BeginForm("UpdateLike", "Comment", new AjaxOptions()
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "like-progress-buttons"
}))
{
    string buttonLikeStyle = "btn-default";
    string buttonDislikeStyle = "btn-default";
    bool? buttonLikeValue = true;
    bool? buttonDislikeValue = false;
    if (Model.UserLike != null)
    {
        if (Model.UserLike.Like)
        {
            buttonLikeValue = null;
            buttonLikeStyle = "btn-success";
        }
        else
        {
            buttonDislikeValue = null;
            buttonDislikeStyle = "btn-danger";
        }
    }
    @Html.AntiForgeryToken()
    @Html.Hidden("bookID", Model.BookID)
    @Html.Hidden("returnUrl","details")
    <div class="btn-group btn-group-sm btn-group-justified">
        <div class="btn-group"><button type="submit" class="btn @buttonLikeStyle" name="like" value="@buttonLikeValue.ToString()"><span class="glyphicon glyphicon-thumbs-up"> Like  </span></button></div>
        <div class="btn-group"><button type="submit" class="btn @buttonDislikeStyle" name="like" value="@buttonDislikeValue.ToString()"><span class="glyphicon glyphicon-thumbs-down"> Dislike  </span></button></div>
    </div>
    <div class="progress" style="padding-top: 5px">
        @{ int likePercent = Model.Likes + Model.Dislikes != 0 ? Model.Likes*100/(Model.Likes + Model.Dislikes) : 50; }
        <div class="progress-bar progress-bar-success" style="width: @likePercent%">
            <span class="sr-only">@likePercent likes</span>
        </div>
        @{ int dislikePercent = Model.Likes + Model.Dislikes != 0 ? Model.Dislikes*100/(Model.Likes + Model.Dislikes) : 50; }
        <div class="progress-bar progress-bar-danger" style="width: @dislikePercent%">
            <span class="sr-only">@dislikePercent dislikes</span>
        </div>
    </div>
}
